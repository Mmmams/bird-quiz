{"ast":null,"code":"var _jsxFileName = \"/home/sergei/Work/bird-quiz/bird-quiz/src/components/list/list.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./list.styles.scss\";\nimport { selectBirdsNames, selectRandom, selectCurrentBirdsInfo } from \"../../redux/birds/birds.selector\";\nimport { chooseCurrentList, chooseCurrentTitle, chooseCurrentAudio, recieveRightAnswer } from \"../../redux/birds/birds.action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BirdsList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const birds = useSelector(selectBirdsNames);\n  const random = useSelector(selectRandom);\n  const birdsInfo = useSelector(selectCurrentBirdsInfo);\n  console.log(birds);\n\n  const handleChooseList = (event, index) => {\n    if (random === index) {\n      dispatch(recieveRightAnswer());\n      console.log(event);\n      event.target.childNodes[0].childNodes[0].attributes[5].nodeValue = \"green\";\n    } else {\n      console.log(event);\n      event.target.childNodes[0].childNodes[0].attributes[5].nodeValue = \"red\";\n    }\n\n    dispatch(chooseCurrentList(index));\n    dispatch(chooseCurrentTitle(index));\n    dispatch(chooseCurrentAudio(index));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bird-list-container\",\n    children: random ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"bird-list\",\n        children: birds.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list\",\n          onClick: event => handleChooseList(event, index),\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"options_block\",\n            width: \"14\",\n            height: \"14\",\n            children: /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"7\",\n              cy: \"7\",\n              r: \"6\",\n              stroke: \"black\",\n              strokeWidth: \"1\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: name[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bird-list-container loading-title\",\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BirdsList, \"HPr33GrAj/mOc8wb/99xf2y9koQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = BirdsList;\nexport default BirdsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BirdsList\");","map":{"version":3,"sources":["/home/sergei/Work/bird-quiz/bird-quiz/src/components/list/list.component.jsx"],"names":["React","selectBirdsNames","selectRandom","selectCurrentBirdsInfo","chooseCurrentList","chooseCurrentTitle","chooseCurrentAudio","recieveRightAnswer","useDispatch","useSelector","BirdsList","dispatch","birds","random","birdsInfo","console","log","handleChooseList","event","index","target","childNodes","attributes","nodeValue","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,oBAAP;AAEA,SACEC,gBADF,EAEEC,YAFF,EAGEC,sBAHF,QAIO,kCAJP;AAKA,SACEC,iBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,gCALP;AAOA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,KAAK,GAAGH,WAAW,CAACR,gBAAD,CAAzB;AACA,QAAMY,MAAM,GAAGJ,WAAW,CAACP,YAAD,CAA1B;AACA,QAAMY,SAAS,GAAGL,WAAW,CAACN,sBAAD,CAA7B;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,QAAMK,gBAAgB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzC,QAAIN,MAAM,KAAKM,KAAf,EAAsB;AACpBR,MAAAA,QAAQ,CAACJ,kBAAkB,EAAnB,CAAR;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAA,MAAAA,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwB,CAAxB,EAA2BA,UAA3B,CAAsC,CAAtC,EAAyCC,UAAzC,CAAoD,CAApD,EAAuDC,SAAvD,GACE,OADF;AAED,KALD,MAKO;AACLR,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAA,MAAAA,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwB,CAAxB,EAA2BA,UAA3B,CAAsC,CAAtC,EAAyCC,UAAzC,CAAoD,CAApD,EAAuDC,SAAvD,GAAmE,KAAnE;AACD;;AACDZ,IAAAA,QAAQ,CAACP,iBAAiB,CAACe,KAAD,CAAlB,CAAR;AACAR,IAAAA,QAAQ,CAACN,kBAAkB,CAACc,KAAD,CAAnB,CAAR;AACAR,IAAAA,QAAQ,CAACL,kBAAkB,CAACa,KAAD,CAAnB,CAAR;AACD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,cACGN,MAAM,gBACL;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,kBACGD,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAON,KAAP,kBACT;AACE,UAAA,SAAS,EAAC,MADZ;AAGE,UAAA,OAAO,EAAGD,KAAD,IAAWD,gBAAgB,CAACC,KAAD,EAAQC,KAAR,CAHtC;AAAA,kCAKE;AAAK,YAAA,SAAS,EAAC,eAAf;AAA+B,YAAA,KAAK,EAAC,IAArC;AAA0C,YAAA,MAAM,EAAC,IAAjD;AAAA,mCACE;AACE,cAAA,EAAE,EAAC,GADL;AAEE,cAAA,EAAE,EAAC,GAFL;AAGE,cAAA,CAAC,EAAC,GAHJ;AAIE,cAAA,MAAM,EAAC,OAJT;AAKE,cAAA,WAAW,EAAC,GALd;AAME,cAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF,eAeE;AAAA,sBAAOM,IAAI,CAAC,CAAD;AAAX;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA,WAEON,KAFP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADK,gBAyBL;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CApDD;;GAAMT,S;UACaF,W,EACHC,W,EACCA,W,EACGA,W;;;KAJdC,S;AAsDN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\n\nimport \"./list.styles.scss\";\n\nimport {\n  selectBirdsNames,\n  selectRandom,\n  selectCurrentBirdsInfo,\n} from \"../../redux/birds/birds.selector\";\nimport {\n  chooseCurrentList,\n  chooseCurrentTitle,\n  chooseCurrentAudio,\n  recieveRightAnswer,\n} from \"../../redux/birds/birds.action\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst BirdsList = () => {\n  const dispatch = useDispatch();\n  const birds = useSelector(selectBirdsNames);\n  const random = useSelector(selectRandom);\n  const birdsInfo = useSelector(selectCurrentBirdsInfo);\n  console.log(birds);\n  const handleChooseList = (event, index) => {\n    if (random === index) {\n      dispatch(recieveRightAnswer());\n      console.log(event);\n      event.target.childNodes[0].childNodes[0].attributes[5].nodeValue =\n        \"green\";\n    } else {\n      console.log(event);\n      event.target.childNodes[0].childNodes[0].attributes[5].nodeValue = \"red\";\n    }\n    dispatch(chooseCurrentList(index));\n    dispatch(chooseCurrentTitle(index));\n    dispatch(chooseCurrentAudio(index));\n  };\n\n  return (\n    <div className=\"bird-list-container\">\n      {random ? (\n        <div>\n          <ul className=\"bird-list\">\n            {birds.map((name, index) => (\n              <li\n                className=\"list\"\n                key={index}\n                onClick={(event) => handleChooseList(event, index)}\n              >\n                <svg className=\"options_block\" width=\"14\" height=\"14\">\n                  <circle\n                    cx=\"7\"\n                    cy=\"7\"\n                    r=\"6\"\n                    stroke=\"black\"\n                    strokeWidth=\"1\"\n                    fill=\"white\"\n                  ></circle>\n                </svg>\n                <span>{name[0]}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div className=\"bird-list-container loading-title\">LOADING...</div>\n      )}\n    </div>\n  );\n};\n\nexport default BirdsList;\n"]},"metadata":{},"sourceType":"module"}