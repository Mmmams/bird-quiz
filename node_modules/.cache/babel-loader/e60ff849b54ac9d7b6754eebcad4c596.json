{"ast":null,"code":"var _jsxFileName = \"/home/sergei/Work/bird-quiz/src/components/list/list.component.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./list.styles.scss\";\nimport { selectBirdsNames, selectRandom, selecrExtraScore, selectBirdsInfo, selectAnswered } from \"../../redux/birds/birds.selector\";\nimport { chooseCurrentList, chooseCurrentTitle, chooseCurrentAudio, recieveRightAnswer, decreaseExtraScore, increaseScore, changeColor } from \"../../redux/birds/birds.action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport right from \"../../assets/true.mp3\";\nimport wrong from \"../../assets/wrong.mp3\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BirdsList = () => {\n  _s();\n\n  useEffect(() => {\n    console.log(\"Правильный ответ: \" + birds[random]);\n  }, [random]);\n  const dispatch = useDispatch();\n  const answered = useSelector(selectAnswered);\n  const birds = useSelector(selectBirdsNames);\n  const random = useSelector(selectRandom);\n  const birdsInfo = useSelector(selectBirdsInfo);\n  const extraScore = useSelector(selecrExtraScore);\n  const rightAnswerAudio = new Audio(right);\n  const wrongAnswerAudio = new Audio(wrong);\n\n  const handleChooseList = (event, index) => {\n    if (random === index) {\n      dispatch(changeColor(index, \"green\"));\n\n      if (answered === false) {\n        rightAnswerAudio.play();\n        dispatch(increaseScore(extraScore));\n      }\n\n      dispatch(recieveRightAnswer());\n    } else {\n      if (birds[index][2] !== \"red\" && answered === false) {\n        dispatch(decreaseExtraScore());\n        wrongAnswerAudio.play();\n      }\n\n      if (answered === false) {\n        dispatch(changeColor(index, \"red\"));\n      }\n    }\n\n    dispatch(chooseCurrentList(index));\n    dispatch(chooseCurrentTitle(index));\n    dispatch(chooseCurrentAudio(index));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bird-list-container\",\n    children: birdsInfo.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"bird-list\",\n        children: birds.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list\",\n          onClick: event => handleChooseList(event, index),\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"options_block\",\n            width: \"14\",\n            height: \"14\",\n            children: /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"7\",\n              cy: \"7\",\n              r: \"6\",\n              stroke: \"black\",\n              strokeWidth: \"1\",\n              fill: name[2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: name[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bird-list-container loading-title\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BirdsList, \"UWSVbQuBKFeajwWFXK2T1eKed5A=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = BirdsList;\nexport default BirdsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BirdsList\");","map":{"version":3,"sources":["/home/sergei/Work/bird-quiz/src/components/list/list.component.jsx"],"names":["selectBirdsNames","selectRandom","selecrExtraScore","selectBirdsInfo","selectAnswered","chooseCurrentList","chooseCurrentTitle","chooseCurrentAudio","recieveRightAnswer","decreaseExtraScore","increaseScore","changeColor","useDispatch","useSelector","right","wrong","useEffect","BirdsList","console","log","birds","random","dispatch","answered","birdsInfo","extraScore","rightAnswerAudio","Audio","wrongAnswerAudio","handleChooseList","event","index","play","length","map","name"],"mappings":"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","sourcesContent":["import \"./list.styles.scss\";\nimport {\n  selectBirdsNames,\n  selectRandom,\n  selecrExtraScore,\n  selectBirdsInfo,\n  selectAnswered,\n} from \"../../redux/birds/birds.selector\";\nimport {\n  chooseCurrentList,\n  chooseCurrentTitle,\n  chooseCurrentAudio,\n  recieveRightAnswer,\n  decreaseExtraScore,\n  increaseScore,\n  changeColor,\n} from \"../../redux/birds/birds.action\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport right from \"../../assets/true.mp3\";\nimport wrong from \"../../assets/wrong.mp3\";\nimport { useEffect } from \"react\";\n\nconst BirdsList = () => {\n  useEffect(() => {\n    console.log(\"Правильный ответ: \" + birds[random]);\n  }, [random]);\n  const dispatch = useDispatch();\n  const answered = useSelector(selectAnswered);\n  const birds = useSelector(selectBirdsNames);\n  const random = useSelector(selectRandom);\n  const birdsInfo = useSelector(selectBirdsInfo);\n  const extraScore = useSelector(selecrExtraScore);\n  const rightAnswerAudio = new Audio(right);\n  const wrongAnswerAudio = new Audio(wrong);\n  const handleChooseList = (event, index) => {\n    if (random === index) {\n      dispatch(changeColor(index, \"green\"));\n      if (answered === false) {\n        rightAnswerAudio.play();\n        dispatch(increaseScore(extraScore));\n      }\n\n      dispatch(recieveRightAnswer());\n    } else {\n      if (birds[index][2] !== \"red\" && answered === false) {\n        dispatch(decreaseExtraScore());\n        wrongAnswerAudio.play();\n      }\n      if (answered === false) {\n        dispatch(changeColor(index, \"red\"));\n      }\n    }\n    dispatch(chooseCurrentList(index));\n    dispatch(chooseCurrentTitle(index));\n    dispatch(chooseCurrentAudio(index));\n  };\n\n  return (\n    <div className=\"bird-list-container\">\n      {birdsInfo.length ? (\n        <div>\n          <ul className=\"bird-list\">\n            {birds.map((name, index) => (\n              <li\n                className=\"list\"\n                key={index}\n                onClick={(event) => handleChooseList(event, index)}\n              >\n                <svg className=\"options_block\" width=\"14\" height=\"14\">\n                  <circle\n                    cx=\"7\"\n                    cy=\"7\"\n                    r=\"6\"\n                    stroke=\"black\"\n                    strokeWidth=\"1\"\n                    fill={name[2]}\n                  ></circle>\n                </svg>\n                <span>{name[0]}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div className=\"bird-list-container loading-title\">Загрузка...</div>\n      )}\n    </div>\n  );\n};\n\nexport default BirdsList;\n"]},"metadata":{},"sourceType":"module"}